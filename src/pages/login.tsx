import type { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useEffect } from "react";
import { useForm } from "react-hook-form";
import { loginInput } from "../server/inputs/loginInput";
import { trpc } from "../utils/trpc";

const Login: NextPage = () => {
    const { handleSubmit, register } = useForm<loginInput>();
    const router = useRouter();

    useEffect(() => {
        if (localStorage.getItem("token") || localStorage.getItem("user")) {
            router.push("/");
        }
    }, []);

    // import react router
    const { mutate, error } = trpc.useMutation(["user.login"], {
        onSuccess: (data) => {
            // set token in local storage
            localStorage.setItem("token", data.token);
            localStorage.setItem("expense-username", JSON.stringify(data.username));
            localStorage.setItem("expense-userEmail", JSON.stringify(data.userEmail));
            // redirect to home page
            router.push("/");

        }
    });

    function onSubmit(data: loginInput) {
        // check if password and confirm password match
        mutate(data);
    }

    return (
        <>
            <Head>
                <title>Login - Expense App</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <div className="flex flex-col justify-center items-center pt-6">
                <span className="text-2xl pb-4">Sign In</span>
                <form onSubmit={handleSubmit(onSubmit)} className="flex flex-col gap-4 w-1/2 mobile:w-full mobile:px-4">
                    {error && <div className="text-red-500">{error.message}</div>}
                    <input
                        type="text" placeholder="email"
                        className="border-2 border-gray-700 p-2"
                        {...register('email')} />

                    <input
                        type="password" placeholder="password"
                        className="border-2 border-gray-700 p-2"
                        {...register('password')} />
                    <button type="submit" className="border-2 border-gray-700 p-2 bg-blue-600 text-white text-xl uppercase">Sign in</button>
                </form>
                <Link href="/register">
                    <a className="text-blue-500 text-xl">Register</a>
                </Link>
                <Link href="/forgot-password">
                    <a className="text-blue-500 text-xl">forgot password?</a>
                </Link>

            </div>
        </>
    );
};


export default Login;
