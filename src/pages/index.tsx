import type { NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import * as jose from "jose";
import moment from "moment";
import Sidebar from "../components/Sidebar";
import Navbar from "../components/Navbar";
import RightSideBar from "../components/RightSideBar";
import MainContent from "../components/MainContent";
import { trpc } from "../utils/trpc";
import { getAllExpensesInput } from "../server/inputs/getAllExpenses";

const Home: NextPage = () => {
  const router = useRouter();
  const [user, setUser] = useState<any>();
  const [userEmail, setUserEmail] = useState<any>();
  const [getAllExpenses, setGetAllExpenses] = useState<any>();
  const [username, setUsername] = useState<any>();
  const { data, error } = trpc.useQuery(['user.get-expense', { userEmail }], {
    onSuccess: (data) => {
      setGetAllExpenses(data);
    }
  });

  // check if token is in local storage and if not redirect to login
  useEffect(() => {
    if (!localStorage.getItem("token")) {
      router.push("/login");
    }
    const token = localStorage.getItem("token");
    const username = localStorage.getItem("expense-username");
    if (token && username) {
      const decoded = jose.decodeJwt(token);
      const userEmail = decoded.iss;
      console.log("decoded", userEmail);
      setUserEmail(userEmail);
      setUsername(username);

      if (decoded && decoded.exp != undefined) {
        const exp = decoded.exp;
        const now = Math.floor(Date.now() / 1000);
        if (exp < now) {
          localStorage.removeItem("token");
          localStorage.removeItem("user");
          router.push("/login");
        }
      }
    }
    setUser(localStorage.getItem("user"));
  }, []);

  return (
    <>
      <Head>
        <title>Dashboard - Expense App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="flex flex-col bg-gray-100">
        <div>
          <Navbar />
        </div>
        <div className="flex">
          <div className="flex w-[18%]">
            <Sidebar active="Home"/>
          </div>
          <div className="flex flex-col flex-1">
            <MainContent getAllExpenses={getAllExpenses}/>
          </div>

          <div className="w-[25%]">
            <RightSideBar />
          </div>

        </div>
      </div>
    </>
  );
};


export default Home;
